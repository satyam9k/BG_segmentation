
import cv2
import numpy as np
import mediapipe as mp

# Initialize MediaPipe's Image Segmenter
mp_drawing = mp.solutions.drawing_utils
mp_segmentation = mp.solutions.selfie_segmentation

# Load the video background
background = cv2.VideoCapture("Untitled design (1).mp4")  # Replace "video_background.mp4" with your video file path

# Start capturing video from the camera
camera = cv2.VideoCapture(0)  # You may need to change the index (e.g., 1) if your camera is not at index 0

with mp_segmentation.SelfieSegmentation(model_selection=1) as segmenter:
    while camera.isOpened():
        success, image = camera.read()
        if not success:
            print("Error: Failed to capture frame from camera.")
            break

        # Flip the image horizontally for a more intuitive view
        image = cv2.flip(image, 1)

        # Segment the foreground from the camera feed
        results = segmenter.process(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
        segmented_image = np.zeros(image.shape, dtype=np.uint8)
        segmented_image[:] = (0, 255, 0)  # Green color for segmentation mask
        condition = results.segmentation_mask > 0.1  # Threshold segmentation mask
        segmented_image = np.where(condition[:, :, None], image, segmented_image)

        # Resize the video background to match the camera feed size
        success_bg, bg_frame = background.read()
        if not success_bg:
            background.set(cv2.CAP_PROP_POS_FRAMES, 0)
            _, bg_frame = background.read()
        bg_frame = cv2.resize(bg_frame, (image.shape[1], image.shape[0]))

        # Combine the segmented image and the video background
        combined_image = np.where(condition[:, :, None], image, bg_frame)

        # Display the result
        cv2.imshow('Virtual Background', combined_image)

        # Press 'q' to exit
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

# Release the video capture objects
camera.release()
background.release()
cv2.destroyAllWindows()
